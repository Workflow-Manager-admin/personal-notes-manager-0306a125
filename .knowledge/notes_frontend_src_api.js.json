{"is_source_file": true, "format": "JavaScript", "description": "This file defines functions for interacting with a notes management API, including user authentication (login and register) and CRUD operations for notes (get, create, update, delete). It also manages authorization headers by retrieving a token from utilities.", "external_files": ["./utils/auth"], "external_methods": ["getToken"], "published": ["login", "register", "getNotes", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "login(email, password)", "description": "Performs user login by sending email and password to the API, returns user token and info.", "scope": "", "scopeKind": ""}, {"name": "register(email, password)", "description": "Registers a new user with email and password, returns user token and info.", "scope": "", "scopeKind": ""}, {"name": "authHeader()", "description": "Retrieves the stored token and formats it into an Authorization header.", "scope": "", "scopeKind": ""}, {"name": "getNotes(query = \"\")", "description": "Fetches notes from the API, optionally filtered by a search query.", "scope": "", "scopeKind": ""}, {"name": "createNote(note)", "description": "Creates a new note by sending note data to the API.", "scope": "", "scopeKind": ""}, {"name": "updateNote(id, note)", "description": "Updates an existing note identified by its ID.", "scope": "", "scopeKind": ""}, {"name": "deleteNote(id)", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "fetch", "fetch", "fetch", "fetch", "fetch"], "search-terms": ["Notes API", "authentication functions", "CRUD notes", "auth token management"], "state": 2, "file_id": 15, "knowledge_revision": 32, "git_revision": "", "ctags": [{"_type": "tag", "name": "API_BASE", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^const API_BASE = \"http:\\/\\/localhost:3001\";$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "authHeader", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^function authHeader() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^export async function createNote(note) {$/", "language": "JavaScript", "kind": "function", "signature": "(note)"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^export async function deleteNote(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^export async function getNotes(query = \"\") {$/", "language": "JavaScript", "kind": "function", "signature": "(query = \"\")"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^export async function login(email, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(email, password)"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^export async function register(email, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(email, password)"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-0306a125/notes_frontend/src/api.js", "pattern": "/^export async function updateNote(id, note) {$/", "language": "JavaScript", "kind": "function", "signature": "(id, note)"}], "hash": "1591611645e570a8dfd12563a989f63c", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/api.js", "revision_history": [{"32": ""}]}